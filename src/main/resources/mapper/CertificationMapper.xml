<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciliweb.dao.CertificationMapper">
  <resultMap id="BaseResultMap" type="com.ciliweb.domain.Certification">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="upload_url" jdbcType="VARCHAR" property="uploadUrl" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="apply_role" jdbcType="VARCHAR" property="applyRole" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="handler_id" jdbcType="BIGINT" property="handlerId" />
    <result column="execute" jdbcType="VARCHAR" property="execute" />
    <result column="handling_time" jdbcType="TIMESTAMP" property="handlingTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from certification_apply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ciliweb.domain.Certification">
    insert into certification_apply (id, user_id, nick_name, 
      upload_url, apply_time, apply_role, 
      id_card, handler_id, execute, 
      handling_time, status)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, 
      #{uploadUrl,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, #{applyRole,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=VARCHAR}, #{handlerId,jdbcType=BIGINT}, #{execute,jdbcType=VARCHAR}, 
      #{handlingTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ciliweb.domain.Certification">
    update certification_apply
    set user_id = #{userId,jdbcType=BIGINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      upload_url = #{uploadUrl,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      apply_role = #{applyRole,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      handler_id = #{handlerId,jdbcType=BIGINT},
      execute = #{execute,jdbcType=VARCHAR},
      handling_time = #{handlingTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, user_id, nick_name, upload_url, apply_time, apply_role, id_card, handler_id, 
    execute, handling_time, status
    from certification_apply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, nick_name, upload_url, apply_time, apply_role, id_card, handler_id, 
    execute, handling_time, status
    from certification_apply
  </select>
</mapper>